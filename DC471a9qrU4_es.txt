ArrayMap, crea un nuevo array llamando a una función en cada elemento de un array diferente.||| Imagina que tenemos un array de cuadrados.||| Podemos llamar a una función en cada uno de esos cuadrados usando map para convertirlo en||| un nuevo array de círculos.||| En otras palabras, es solo un bucle, donde el objetivo de ese bucle es crear un nuevo array.||| En nuestro código, comencemos con un array de objetos que contiene algunos datos de usuario.||| Nuestro objetivo es tomar este array de objetos y convertirlo en un array de cadenas que||| solo contenga los nombres de usuario.||| Podríamos hacer esto imperativamente creando un nuevo array vacío, luego usar un bucle for para||| agregar cada nombre de usuario individual al nuevo array.||| Observa cómo estamos usando declaraciones para cambiar el estado de la aplicación.||| Esto se conoce como programación imperativa.||| Map, por otro lado, es declarativo y describe cómo crear este nuevo array usando||| una función.||| El nuevo array es igual al array original mapeado a una función.||| La función se pasa como un argumento a map, y se llama en cada elemento del array original.||| Cada función tiene acceso al elemento actual en el bucle así como a su índice.||| En el cuerpo de la función, tu tarea es calcular un nuevo valor y luego devolverlo.||| Y ahora hemos resuelto el mismo problema que hicimos con el bucle for, pero con menos código||| y sin mutar el estado interno.||| Si eres un usuario de React.js, a menudo verás map usado para tomar algunos datos iniciales y||| luego mapearlos a JSX para la interfaz de usuario real.||| O tal vez necesites estos nombres de usuario para hacer algo de forma asíncrona, como obtener datos adicionales||| de la base de datos.||| Podrías hacer eso mapeándolos todos a un array de promesas, luego ejecutándolos concurrentemente||| con promise.all.||| Un anti-patrón a tener en cuenta con map es que solo debes usarlo si planeas||| usar el nuevo array.||| Si solo necesitas ejecutar un bucle, considera usar for each o un bucle for regular en su lugar.||| Esto ha sido ArrayMap en 100 segundos.||| Gracias por ver, y nos vemos en el próximo.